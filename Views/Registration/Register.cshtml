@model Assignment2.Models.RegistrationViewModel
@inject IConfiguration Configuration
@{
ViewData["Title"] = "Register";
}
<h2>FreshFarmMarket Registration</h2>
<form asp-action="Register" method="post" enctype="multipart/form-data" id="registerForm">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="FullName"></label>
        <input asp-for="FullName" class="form-control" />
        <span asp-validation-for="FullName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CreditCardNo"></label>
        <input asp-for="CreditCardNo" class="form-control" />
        <span asp-validation-for="CreditCardNo" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Gender"></label>
        <select asp-for="Gender" class="form-control">
            <option value="">Select Gender</option>
            <option>Male</option>
            <option>Female</option>
            <option>Other</option>
        </select>
        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="MobileNo"></label>
        <input asp-for="MobileNo" class="form-control" />
        <span asp-validation-for="MobileNo" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DeliveryAddress"></label>
        <input asp-for="DeliveryAddress" class="form-control" />
        <span asp-validation-for="DeliveryAddress" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" type="password" class="form-control" />
        <span asp-validation-for="Password" class="text-danger"></span>
        <small id="passwordFeedback" class="form-text"></small>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword"></label>
        <input asp-for="ConfirmPassword" type="password" class="form-control" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Photo"></label>
        <input asp-for="Photo" type="file" class="form-control" accept=".jpg" />
        <span asp-validation-for="Photo" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="AboutMe"></label>
        <textarea asp-for="AboutMe" class="form-control"></textarea>
        <span asp-validation-for="AboutMe" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="hidden" id="Captcha" name="Captcha" />
        <span asp-validation-for="Captcha" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</form>
@section Scripts {
    <script src="https://www.google.com/recaptcha/api.js?render=@Configuration["GoogleRecaptcha:SiteKey"]"></script>
    <script>
    // Initialize grecaptcha for debugging
    window.onload = function() {
        console.log("Window loaded");
        if (typeof grecaptcha !== 'undefined') {
            console.log("reCAPTCHA initialized");
        } else {
            console.error("reCAPTCHA not loaded");
        }
    };
</script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("DOM loaded"); // Verify script loads

            var form = document.getElementById("registerForm");
            if (form) {
            console.log("asdasdasd")
                form.addEventListener("submit", function (e) {
                    e.preventDefault();
                    
                    console.log("Form submission intercepted");

                    // Verify grecaptcha exists
                    if (typeof grecaptcha === 'undefined') {
                        alert("reCAPTCHA not loaded");
                        return;
                    }

                    grecaptcha.ready(function () {

                        grecaptcha.execute('6LeukNYqAAAAAKlG_jBw6OugOCW_jrnpkfSMUzm-', {
                            action: 'register'
                        }).then(function (token) {
                            document.getElementById("Captcha").value = token;
                            form.submit(); // Submit AFTER token is set
                        }).catch(function (error) {
                            console.error("reCAPTCHA error:", error);
                        });
                    });
                });
            } else {
            }
        });
    </script>
    <script src="~/js/password-validation.js"></script>
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}